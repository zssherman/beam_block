#!/usr/bin/env python
""" Creates a beam_block.nc from radar_file.nc and tif_file.tif. """

import argparse
import pyart

from beam_block.config import dict_config
from beam_block.core import beam_block_radar

def main():
    """ Reads all prior functions and produces pbb, cbb and flags.
    The data is then put into dictionaries and added to a radar object,
    which then the radar object is written to netCDF. """
    # Creating func and argument parser for terminal use of this file.
    parser = argparse.ArgumentParser(
        description='Create a radar object with beam block fields.')
    parser.add_argument(
        '-bw', '--beam_width', type=float, default=1.0,
        help='Half power beam width in degrees.')
    parser.add_argument(
        'radar_file', type=str, help='Radar file to use for calculations.')
    parser.add_argument(
        'tif_file', type=str, help='Tif file to use as terrain data.')
    parser.add_argument(
        'out_file', type=str, help='Out file path and name to use.')
    parser.add_argument(
        '-nb', '--no_block_thresh', type=float, default=0.01,
        help='Threshold where below the value is flagged not blocked.')
    parser.add_argument(
        '-cb', '--complete_block_thresh', type=float, default=0.95,
        help='Threshold where above the value is flagged completely blocked.')
    args = parser.parse_args()

    print('')
    print('## Creating a radar object with beam block fields')
    print('')

    radar = pyart.io.read(args.radar_file)

    pbb_all, cbb_all = beam_block_radar.beam_block(
        radar, args.tif_file, beam_width=args.beam_width)

    pbb_flags, cbb_flags = beam_block_radar.beam_block_flags(
        pbb_all, cbb_all, no_block_thresh=args.no_block_thresh,
        complete_block_thresh=args.complete_block_thresh)

    pbb_dict = dict_config.pbb_to_dict(pbb_all)
    cbb_dict = dict_config.cbb_to_dict(cbb_all)

    pbb_flags_dict = dict_config.pbb_flags_to_dict(pbb_flags)
    cbb_flags_dict = dict_config.cbb_flags_to_dict(cbb_flags)

    radar.add_field('partial_beam_block',
                    pbb_dict, replace_existing=True)
    radar.add_field('cumulative_beam_block',
                    cbb_dict, replace_existing=True)
    radar.add_field('partial_beam_block_flags',
                    pbb_flags_dict, replace_existing=True)
    radar.add_field('cumulative_beam_block_flags',
                    cbb_flags_dict, replace_existing=True)

    pyart.io.write_cfradial(args.out_file, radar)

    print('')
    print('## A netCDF radar object with beam block fields has been created.')
    print('')

if __name__ == '__main__':
    main()
